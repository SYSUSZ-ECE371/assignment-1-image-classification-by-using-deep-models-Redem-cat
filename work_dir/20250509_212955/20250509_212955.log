2025/05/09 21:29:58 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: win32
    Python: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:44:03) [MSC v.1929 64 bit (AMD64)]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1185531097
    GPU 0: NVIDIA GeForce RTX 3060 Laptop GPU
    CUDA_HOME: E:\NVIDIA GPU Computing Toolkit\CUDA\v12.1
    NVCC: Cuda compilation tools, release 12.1, V12.1.105
    MSVC: 未知（解码错误）
    GCC: n/a
    PyTorch: 2.4.1
    PyTorch compiling details: PyTorch built with:
  - C++ Version: 201703
  - MSVC 192930154
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /Zc:__cplusplus /bigobj /FS /utf-8 -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.20.0
    OpenCV: 4.11.0
    MMEngine: 0.10.7

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1185531097
    deterministic: False
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/05/09 21:29:58 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=256)
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    num_classes=1000,
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
data_root = 'data/custom_dataset'
dataset_type = 'ImageNet'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='VisualizationHook'))
default_scope = 'mmpretrain'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=2,
        init_cfg=dict(
            checkpoint=
            'F:\\py\\ECE371_Assigment\\t1\\resnet50_8xb32_in1k_20210831-ea4938fc.pth',
            prefix='backbone',
            type='Pretrained'),
        num_stages=4,
        out_indices=(3, ),
        style='pytorch',
        type='ResNet'),
    head=dict(
        in_channels=2048,
        loss=dict(loss_weight=1.0, type='CrossEntropyLoss'),
        num_classes=5,
        topk=(
            1,
            5,
        ),
        type='LinearClsHead'),
    neck=dict(type='GlobalAveragePooling'),
    type='ImageClassifier')
optim_wrapper = dict(
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0001))
param_scheduler = dict(
    by_epoch=True, gamma=0.1, milestones=[
        15,
    ], type='MultiStepLR')
randomness = dict(deterministic=False, seed=None)
resume = False
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='val.txt',
        classes=[
            'daisy',
            'dandelion',
            'rose',
            'sunflower',
            'tulip',
        ],
        data_prefix='val',
        data_root='data/custom_dataset',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(edge='short', scale=256, type='ResizeEdge'),
            dict(crop_size=224, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    topk=(
        1,
        5,
    ), type='Accuracy')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(edge='short', scale=256, type='ResizeEdge'),
    dict(crop_size=224, type='CenterCrop'),
    dict(type='PackInputs'),
]
train_cfg = dict(by_epoch=True, max_epochs=30, val_interval=1)
train_dataloader = dict(
    batch_size=256,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='train.txt',
        classes=[
            'daisy',
            'dandelion',
            'rose',
            'sunflower',
            'tulip',
        ],
        data_prefix='',
        data_root='data/custom_dataset',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(scale=224, type='RandomResizedCrop'),
            dict(direction='horizontal', prob=0.5, type='RandomFlip'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(scale=224, type='RandomResizedCrop'),
    dict(direction='horizontal', prob=0.5, type='RandomFlip'),
    dict(type='PackInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    collate_fn=dict(type='default_collate'),
    dataset=dict(
        ann_file='val.txt',
        classes=[
            'daisy',
            'dandelion',
            'rose',
            'sunflower',
            'tulip',
        ],
        data_prefix='',
        data_root='data/custom_dataset',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(edge='short', scale=256, type='ResizeEdge'),
            dict(crop_size=224, type='CenterCrop'),
            dict(type='PackInputs'),
        ],
        type='CustomDataset'),
    num_workers=5,
    persistent_workers=True,
    pin_memory=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    topk=(
        1,
        5,
    ), type='Accuracy')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='UniversalVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'F:/py/ECE371_Assigment/t1/work_dir'

2025/05/09 21:29:59 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/05/09 21:29:59 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) VisualizationHook                  
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/05/09 21:30:00 - mmengine - INFO - load backbone in model from: F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from F:\py\ECE371_Assigment\t1\resnet50_8xb32_in1k_20210831-ea4938fc.pth 

head.fc.weight - torch.Size([5, 2048]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 
2025/05/09 21:30:00 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/05/09 21:30:00 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/05/09 21:30:00 - mmengine - INFO - Checkpoints will be saved to F:\py\ECE371_Assigment\t1\work_dir.
2025/05/09 21:32:27 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:32:27 - mmengine - INFO - Epoch(train)  [1][12/12]  lr: 1.0000e-03  eta: 1:11:11  time: 10.0892  data_time: 0.0006  memory: 6073  loss: 1.4924
2025/05/09 21:32:27 - mmengine - INFO - Saving checkpoint at 1 epochs
2025/05/09 21:32:52 - mmengine - INFO - Epoch(val) [1][44/44]    accuracy/top1: 73.0522  accuracy/top5: 100.0000  data_time: 0.3843  time: 0.5167
2025/05/09 21:34:55 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:34:55 - mmengine - INFO - Epoch(train)  [2][12/12]  lr: 1.0000e-03  eta: 1:03:11  time: 9.7505  data_time: 0.0006  memory: 6073  loss: 1.0058
2025/05/09 21:34:55 - mmengine - INFO - Saving checkpoint at 2 epochs
2025/05/09 21:35:01 - mmengine - INFO - Epoch(val) [2][44/44]    accuracy/top1: 89.3495  accuracy/top5: 100.0000  data_time: 0.0027  time: 0.0969
2025/05/09 21:37:11 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:37:11 - mmengine - INFO - Epoch(train)  [3][12/12]  lr: 1.0000e-03  eta: 1:00:03  time: 10.3405  data_time: 0.0005  memory: 6073  loss: 0.6739
2025/05/09 21:37:11 - mmengine - INFO - Saving checkpoint at 3 epochs
2025/05/09 21:37:17 - mmengine - INFO - Epoch(val) [3][44/44]    accuracy/top1: 91.7798  accuracy/top5: 100.0000  data_time: 0.0017  time: 0.1261
2025/05/09 21:39:24 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:39:24 - mmengine - INFO - Epoch(train)  [4][12/12]  lr: 1.0000e-03  eta: 0:57:05  time: 10.0550  data_time: 0.0006  memory: 6073  loss: 0.5002
2025/05/09 21:39:24 - mmengine - INFO - Saving checkpoint at 4 epochs
2025/05/09 21:39:30 - mmengine - INFO - Epoch(val) [4][44/44]    accuracy/top1: 92.9235  accuracy/top5: 100.0000  data_time: 0.0028  time: 0.1016
2025/05/09 21:41:27 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:41:27 - mmengine - INFO - Epoch(train)  [5][12/12]  lr: 1.0000e-03  eta: 0:53:43  time: 9.2601  data_time: 0.0007  memory: 6073  loss: 0.3824
2025/05/09 21:41:27 - mmengine - INFO - Saving checkpoint at 5 epochs
2025/05/09 21:41:33 - mmengine - INFO - Epoch(val) [5][44/44]    accuracy/top1: 94.2816  accuracy/top5: 100.0000  data_time: 0.0028  time: 0.0965
2025/05/09 21:43:39 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:43:39 - mmengine - INFO - Epoch(train)  [6][12/12]  lr: 1.0000e-03  eta: 0:51:21  time: 10.5606  data_time: 0.0007  memory: 6073  loss: 0.3600
2025/05/09 21:43:39 - mmengine - INFO - Saving checkpoint at 6 epochs
2025/05/09 21:43:45 - mmengine - INFO - Epoch(val) [6][44/44]    accuracy/top1: 94.4961  accuracy/top5: 100.0000  data_time: 0.0028  time: 0.1157
2025/05/09 21:45:48 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:45:48 - mmengine - INFO - Epoch(train)  [7][12/12]  lr: 1.0000e-03  eta: 0:48:54  time: 10.0784  data_time: 0.0008  memory: 6073  loss: 0.2847
2025/05/09 21:45:48 - mmengine - INFO - Saving checkpoint at 7 epochs
2025/05/09 21:45:56 - mmengine - INFO - Epoch(val) [7][44/44]    accuracy/top1: 94.7105  accuracy/top5: 100.0000  data_time: 0.0028  time: 0.1180
2025/05/09 21:49:01 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:49:01 - mmengine - INFO - Epoch(train)  [8][12/12]  lr: 1.0000e-03  eta: 0:49:25  time: 13.5505  data_time: 0.0010  memory: 6073  loss: 0.2314
2025/05/09 21:49:01 - mmengine - INFO - Saving checkpoint at 8 epochs
2025/05/09 21:49:07 - mmengine - INFO - Epoch(val) [8][44/44]    accuracy/top1: 95.2823  accuracy/top5: 100.0000  data_time: 0.0026  time: 0.1050
2025/05/09 21:51:04 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:51:04 - mmengine - INFO - Epoch(train)  [9][12/12]  lr: 1.0000e-03  eta: 0:46:30  time: 9.5159  data_time: 0.0006  memory: 6073  loss: 0.2586
2025/05/09 21:51:04 - mmengine - INFO - Saving checkpoint at 9 epochs
2025/05/09 21:51:10 - mmengine - INFO - Epoch(val) [9][44/44]    accuracy/top1: 95.4253  accuracy/top5: 100.0000  data_time: 0.0027  time: 0.1003
2025/05/09 21:53:15 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:53:15 - mmengine - INFO - Epoch(train) [10][12/12]  lr: 1.0000e-03  eta: 0:44:01  time: 10.3413  data_time: 0.0008  memory: 6073  loss: 0.2266
2025/05/09 21:53:15 - mmengine - INFO - Saving checkpoint at 10 epochs
2025/05/09 21:53:24 - mmengine - INFO - Epoch(val) [10][44/44]    accuracy/top1: 95.9257  accuracy/top5: 100.0000  data_time: 0.0032  time: 0.1292
2025/05/09 21:56:05 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:56:05 - mmengine - INFO - Epoch(train) [11][12/12]  lr: 1.0000e-03  eta: 0:42:39  time: 13.6831  data_time: 0.0006  memory: 6073  loss: 0.2477
2025/05/09 21:56:05 - mmengine - INFO - Saving checkpoint at 11 epochs
2025/05/09 21:56:13 - mmengine - INFO - Epoch(val) [11][44/44]    accuracy/top1: 96.4260  accuracy/top5: 100.0000  data_time: 0.0029  time: 0.1043
2025/05/09 21:58:15 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 21:58:15 - mmengine - INFO - Epoch(train) [12][12/12]  lr: 1.0000e-03  eta: 0:40:06  time: 10.0583  data_time: 0.0008  memory: 6073  loss: 0.1876
2025/05/09 21:58:15 - mmengine - INFO - Saving checkpoint at 12 epochs
2025/05/09 21:58:21 - mmengine - INFO - Epoch(val) [12][44/44]    accuracy/top1: 96.4260  accuracy/top5: 100.0000  data_time: 0.0024  time: 0.0995
2025/05/09 22:00:24 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:00:24 - mmengine - INFO - Epoch(train) [13][12/12]  lr: 1.0000e-03  eta: 0:37:39  time: 10.1087  data_time: 0.0008  memory: 6073  loss: 0.1890
2025/05/09 22:00:24 - mmengine - INFO - Saving checkpoint at 13 epochs
2025/05/09 22:00:31 - mmengine - INFO - Epoch(val) [13][44/44]    accuracy/top1: 96.7119  accuracy/top5: 100.0000  data_time: 0.0024  time: 0.1126
2025/05/09 22:02:39 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:02:39 - mmengine - INFO - Epoch(train) [14][12/12]  lr: 1.0000e-03  eta: 0:35:20  time: 10.4380  data_time: 0.0007  memory: 6073  loss: 0.2181
2025/05/09 22:02:39 - mmengine - INFO - Saving checkpoint at 14 epochs
2025/05/09 22:02:44 - mmengine - INFO - Epoch(val) [14][44/44]    accuracy/top1: 96.8549  accuracy/top5: 100.0000  data_time: 0.0016  time: 0.1068
2025/05/09 22:04:58 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:04:58 - mmengine - INFO - Epoch(train) [15][12/12]  lr: 1.0000e-03  eta: 0:33:08  time: 11.3184  data_time: 0.0004  memory: 6073  loss: 0.1876
2025/05/09 22:04:58 - mmengine - INFO - Saving checkpoint at 15 epochs
2025/05/09 22:05:04 - mmengine - INFO - Epoch(val) [15][44/44]    accuracy/top1: 96.7119  accuracy/top5: 100.0000  data_time: 0.0019  time: 0.1196
2025/05/09 22:08:22 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:08:22 - mmengine - INFO - Epoch(train) [16][12/12]  lr: 1.0000e-04  eta: 0:31:53  time: 16.6612  data_time: 0.0003  memory: 6073  loss: 0.1680
2025/05/09 22:08:22 - mmengine - INFO - Saving checkpoint at 16 epochs
2025/05/09 22:08:29 - mmengine - INFO - Epoch(val) [16][44/44]    accuracy/top1: 96.8549  accuracy/top5: 100.0000  data_time: 0.0015  time: 0.1452
2025/05/09 22:11:31 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:11:31 - mmengine - INFO - Epoch(train) [17][12/12]  lr: 1.0000e-04  eta: 0:30:10  time: 14.6664  data_time: 0.0004  memory: 6073  loss: 0.1577
2025/05/09 22:11:31 - mmengine - INFO - Saving checkpoint at 17 epochs
2025/05/09 22:11:38 - mmengine - INFO - Epoch(val) [17][44/44]    accuracy/top1: 97.3552  accuracy/top5: 100.0000  data_time: 0.0017  time: 0.1413
2025/05/09 22:14:38 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:14:38 - mmengine - INFO - Epoch(train) [18][12/12]  lr: 1.0000e-04  eta: 0:28:18  time: 14.9892  data_time: 0.0008  memory: 6073  loss: 0.1924
2025/05/09 22:14:38 - mmengine - INFO - Saving checkpoint at 18 epochs
2025/05/09 22:14:47 - mmengine - INFO - Epoch(val) [18][44/44]    accuracy/top1: 97.3552  accuracy/top5: 100.0000  data_time: 0.0017  time: 0.1710
2025/05/09 22:19:18 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:19:18 - mmengine - INFO - Epoch(train) [19][12/12]  lr: 1.0000e-04  eta: 0:27:12  time: 22.8635  data_time: 0.0005  memory: 6073  loss: 0.1939
2025/05/09 22:19:18 - mmengine - INFO - Saving checkpoint at 19 epochs
2025/05/09 22:19:30 - mmengine - INFO - Epoch(val) [19][44/44]    accuracy/top1: 97.2838  accuracy/top5: 100.0000  data_time: 0.0017  time: 0.2382
2025/05/09 22:24:48 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:24:48 - mmengine - INFO - Epoch(train) [20][12/12]  lr: 1.0000e-04  eta: 0:26:08  time: 25.9510  data_time: 0.0005  memory: 6073  loss: 0.1677
2025/05/09 22:24:48 - mmengine - INFO - Saving checkpoint at 20 epochs
2025/05/09 22:24:55 - mmengine - INFO - Epoch(val) [20][44/44]    accuracy/top1: 97.4267  accuracy/top5: 100.0000  data_time: 0.0019  time: 0.1569
2025/05/09 22:28:51 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:28:51 - mmengine - INFO - Epoch(train) [21][12/12]  lr: 1.0000e-04  eta: 0:24:05  time: 18.8187  data_time: 0.0008  memory: 6073  loss: 0.1976
2025/05/09 22:28:51 - mmengine - INFO - Saving checkpoint at 21 epochs
2025/05/09 22:28:57 - mmengine - INFO - Epoch(val) [21][44/44]    accuracy/top1: 97.4267  accuracy/top5: 100.0000  data_time: 0.0014  time: 0.1176
2025/05/09 22:32:30 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:32:30 - mmengine - INFO - Epoch(train) [22][12/12]  lr: 1.0000e-04  eta: 0:21:43  time: 18.5414  data_time: 0.0006  memory: 6073  loss: 0.1723
2025/05/09 22:32:30 - mmengine - INFO - Saving checkpoint at 22 epochs
2025/05/09 22:32:43 - mmengine - INFO - Epoch(val) [22][44/44]    accuracy/top1: 97.4267  accuracy/top5: 100.0000  data_time: 0.0028  time: 0.2509
2025/05/09 22:35:22 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:35:22 - mmengine - INFO - Epoch(train) [23][12/12]  lr: 1.0000e-04  eta: 0:18:59  time: 12.8300  data_time: 0.0006  memory: 6073  loss: 0.1888
2025/05/09 22:35:22 - mmengine - INFO - Saving checkpoint at 23 epochs
2025/05/09 22:35:28 - mmengine - INFO - Epoch(val) [23][44/44]    accuracy/top1: 97.4982  accuracy/top5: 100.0000  data_time: 0.0027  time: 0.1098
2025/05/09 22:37:36 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:37:36 - mmengine - INFO - Epoch(train) [24][12/12]  lr: 1.0000e-04  eta: 0:16:08  time: 10.6274  data_time: 0.0006  memory: 6073  loss: 0.1794
2025/05/09 22:37:36 - mmengine - INFO - Saving checkpoint at 24 epochs
2025/05/09 22:37:44 - mmengine - INFO - Epoch(val) [24][44/44]    accuracy/top1: 97.4267  accuracy/top5: 100.0000  data_time: 0.0036  time: 0.1308
2025/05/09 22:41:15 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:41:15 - mmengine - INFO - Epoch(train) [25][12/12]  lr: 1.0000e-04  eta: 0:13:36  time: 17.0946  data_time: 0.0012  memory: 6073  loss: 0.1818
2025/05/09 22:41:15 - mmengine - INFO - Saving checkpoint at 25 epochs
2025/05/09 22:41:28 - mmengine - INFO - Epoch(val) [25][44/44]    accuracy/top1: 97.4982  accuracy/top5: 100.0000  data_time: 0.0037  time: 0.2575
2025/05/09 22:45:53 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:45:53 - mmengine - INFO - Epoch(train) [26][12/12]  lr: 1.0000e-04  eta: 0:11:09  time: 18.6970  data_time: 0.0015  memory: 6073  loss: 0.2187
2025/05/09 22:45:53 - mmengine - INFO - Saving checkpoint at 26 epochs
2025/05/09 22:46:07 - mmengine - INFO - Epoch(val) [26][44/44]    accuracy/top1: 97.5697  accuracy/top5: 100.0000  data_time: 0.0039  time: 0.2749
2025/05/09 22:49:54 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:49:54 - mmengine - INFO - Epoch(train) [27][12/12]  lr: 1.0000e-04  eta: 0:08:28  time: 16.5217  data_time: 0.0012  memory: 6073  loss: 0.1750
2025/05/09 22:49:54 - mmengine - INFO - Saving checkpoint at 27 epochs
2025/05/09 22:50:12 - mmengine - INFO - Epoch(val) [27][44/44]    accuracy/top1: 97.5697  accuracy/top5: 100.0000  data_time: 0.0036  time: 0.3311
2025/05/09 22:54:12 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:54:12 - mmengine - INFO - Epoch(train) [28][12/12]  lr: 1.0000e-04  eta: 0:05:43  time: 20.2262  data_time: 0.0013  memory: 6073  loss: 0.1653
2025/05/09 22:54:12 - mmengine - INFO - Saving checkpoint at 28 epochs
2025/05/09 22:54:21 - mmengine - INFO - Epoch(val) [28][44/44]    accuracy/top1: 97.3552  accuracy/top5: 100.0000  data_time: 0.0032  time: 0.1470
2025/05/09 22:59:42 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 22:59:42 - mmengine - INFO - Epoch(train) [29][12/12]  lr: 1.0000e-04  eta: 0:02:57  time: 25.6207  data_time: 0.0010  memory: 6073  loss: 0.1851
2025/05/09 22:59:42 - mmengine - INFO - Saving checkpoint at 29 epochs
2025/05/09 22:59:57 - mmengine - INFO - Epoch(val) [29][44/44]    accuracy/top1: 97.5697  accuracy/top5: 100.0000  data_time: 0.0036  time: 0.2884
2025/05/09 23:03:38 - mmengine - INFO - Exp name: resnet50_8xb32-ft_custom_20250509_212955
2025/05/09 23:03:38 - mmengine - INFO - Epoch(train) [30][12/12]  lr: 1.0000e-04  eta: 0:00:00  time: 19.3106  data_time: 0.0011  memory: 6073  loss: 0.1400
2025/05/09 23:03:38 - mmengine - INFO - Saving checkpoint at 30 epochs
2025/05/09 23:03:47 - mmengine - INFO - Epoch(val) [30][44/44]    accuracy/top1: 97.4982  accuracy/top5: 100.0000  data_time: 0.0032  time: 0.1394
